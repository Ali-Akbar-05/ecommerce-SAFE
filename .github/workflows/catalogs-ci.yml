# Linting workflow: https://github.com/rhysd/actionlint

name: Catalogs-CI

on:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
  # Runs your workflow when you push a commit or tag.
  push:
    branches:
      - develop
      - main
      - preview
      - beta
      - devops/ci
      - fix/*
      - feat/*
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    paths:
      - src/Services/Catalogs/**
      - src/BuildingBlocks/**
      - tests/Services/Catalogs/**
      - .github/actions/**
      - .github/workflows/catalogs-ci.yml
      - .github/workflows/catalogs-cd.yml
      - .github/workflows/reusable-build-test.yml
      - .github/workflows/reusable-build-test-push.yml
      - .github/workflows/reusable-release.yml
      - .github/workflows/reusable-deploy.yml
      - src/Directory.Build.props
      - src/Directory.Packages.props
      - src/Packages.props
      - tests/Directory.Packages.props
      - tests/Directory.Build.props
      - .releaserc.yaml
  pull_request:
    branches:
      - develop
      - main
      - preview
      - beta
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    paths:
      - src/Services/Catalogs/**
      - src/BuildingBlocks/**
      - tests/Services/Catalogs/**
      - .github/actions/**
      - .github/workflows/catalogs-ci.yml
      - .github/workflows/catalogs-cd.yml
      - .github/workflows/reusable-build-test.yml
      - .github/workflows/reusable-build-test-push.yml
      - .github/workflows/reusable-release.yml
      - .github/workflows/reusable-deploy.yml
      - src/Directory.Build.props
      - src/Directory.Packages.props
      - src/Packages.props
      - tests/Directory.Packages.props
      - tests/Directory.Build.props
      - .releaserc.yaml

  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#providing-inputs
  # https://github.blog/changelog/2021-11-10-github-actions-input-types-for-manual-workflows/
  # https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  # Allows us to run this workflow manually from the Actions tab
  # To manually trigger a workflow, use the workflow_dispatch event. You can manually trigger a workflow run using the GitHub API, GitHub CLI, or GitHub browser interface
  # Note: To trigger the workflow_dispatch event, our workflow must be in the default branch
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
          - info
          - warning
          - debug
      should-publish:
        required: true
        default: false
        description: "Should publish docker and publish artifacts?"
        type: boolean
#     # we don't use this here, I detect environment based on the branch
#     environment:
#       description: "Environment to run"
#       type: environment
#       required: true

# https://docs.github.com/en/actions/learn-github-actions/variables#defining-environment-variables-for-a-single-workflow
# https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
# https://docs.github.com/en/actions/learn-github-actions/variables
# Any environment variables set in an env context defined at the workflow level in the caller workflow are not propagated to the called workflow
env:
  IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
  BRANCH_NAME: ${{ github.ref_name }}

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/using-workflows/about-workflows
jobs:

  pre-check:
    runs-on: ubuntu-latest

    # Skipping workflow runs for some commits types
    # https://itnext.io/automate-your-integration-tests-and-semantic-releases-with-github-actions-43875ad83092
    # https://github.com/actions/runner/issues/491#issuecomment-850884422
    # https://stackoverflow.com/questions/69354003/github-action-job-fire-when-previous-job-skipped
    if: |
      !(contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, 'chore') || contains(github.event.head_commit.message, 'docs') || contains(github.event.head_commit.message, 'style'))

    steps:
      - name: Job Info
        run: |
          echo "pre-check is successful."
          echo "branch is: ${{ github.ref_name }}"
          echo workspace is: ${{ github.workspace }}
          echo "is workflow_dispatch event? ${{ github.event_name == 'workflow_dispatch' }}"
          echo "is push event? ${{ github.event_name == 'push' }}"
          echo "is pull request event? ${{ github.event_name == 'pull_request' }}"
          echo "should publish in dispatch mode? ${{ github.event.inputs.should-publish }}"
          echo "should publish? ${{ ((github.event_name != 'pull_request' && contains(fromJson('["develop", "main",  "beta", "preview", "devops/ci"]'), github.ref_name) && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.should-publish)))) == 'true' }}"

  call-build-test:
    needs: pre-check

    permissions:
      checks: write # for test-reporter
      contents: read

    # https://docs.github.com/en/actions/learn-github-actions/expressions#operators
    if: (github.event_name == 'pull_request' || (contains(fromJson('["feat/", "fix/", "release/"]'), github.ref_name)) || (github.event_name == 'workflow_dispatch' && github.event.inputs.should-publish == 'false'))

    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
    # https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/
    uses: ./.github/workflows/reusable-build-test.yml
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
    # https://github.blog/changelog/2022-05-03-github-actions-simplify-using-secrets-with-reusable-workflows/
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-secrets-to-nested-workflows
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecretsinherit
    secrets: inherit # pass all secrets
    with:
      # https://docs.github.com/en/actions/security-guides/encrypted-secrets
      # https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow
      # https://docs.github.com/en/actions/learn-github-actions/variables
      # https://stackoverflow.com/questions/73305126/passing-env-variable-inputs-to-a-reusable-workflow
      tests-path: ${{ vars.CATALOGS_SERVICE_TESTS_PATH }} # tests/Services/Catalogs
      project-path: ${{ vars.CATALOGS_SERVICE_PROJECT_PATH }} # src/Services/Catalogs/ECommerce.Services.Catalogs.Api
      service-name: ${{ vars.CATALOGS_SERVICE_NAME }} # catalogs-service

  call-build-test-push:
    needs: pre-check

    # https://docs.github.com/en/actions/learn-github-actions/expressions#operators
    # input boolean type should compare with 'true' or 'false' string
    if: (github.event_name != 'pull_request' && contains(fromJson('["develop", "main", "beta", "preview", "devops/ci"]'), github.ref_name) && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' &&  github.event.inputs.should-publish == 'true')))


    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idpermissions
    # https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-ghcrio
    ## https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository
    ## https://docs.github.com/en/actions/using-workflows/reusing-workflows
    permissions:
      packages: write # for publishing packages
      pull-requests: write # app-version pull request
      contents: write # for publishing in dry-run mode
      checks: write # for test-reporter

    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
    # https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/
    uses: ./.github/workflows/reusable-build-test-push.yml
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
    # https://github.blog/changelog/2022-05-03-github-actions-simplify-using-secrets-with-reusable-workflows/
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-secrets-to-nested-workflows
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecretsinherit
    secrets: inherit # pass all secrets
    with:
      # https://docs.github.com/en/actions/security-guides/encrypted-secrets
      # https://docs.github.com/en/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow
      # https://docs.github.com/en/actions/learn-github-actions/variables
      # https://stackoverflow.com/questions/73305126/passing-env-variable-inputs-to-a-reusable-workflow
      tests-path: ${{ vars.CATALOGS_SERVICE_TESTS_PATH }} # tests/Services/Catalogs
      project-path: ${{ vars.CATALOGS_SERVICE_PROJECT_PATH }} # src/Services/Catalogs/ECommerce.Services.Catalogs.Api
      service-name: ${{ vars.CATALOGS_SERVICE_NAME }} # catalogs-service
      docker-file-path: ${{ vars.CATALOGS_SERVICE_DOCKER_FILE_PATH }} # src/Services/Catalogs/Dockerfile
      registry: ${{ vars.DOCKER_REGISTRY }} # ghcr.io
      registry-endpoint: ${{ github.repository }}
