# Linting workflow: https://github.com/rhysd/actionlint

name: Catalogs-CI-CD

on:
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#push
  # Runs your workflow when you push a commit or tag.
  push:
    branches:
      - develop
      - main
      - preview
      - beta
      - devops/ci
      - fix/*
      - feat/*
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    paths:
      - src/Services/Catalogs/**
      - src/BuildingBlocks/**
      - tests/Services/Catalogs/**
      - .github/actions/**
      - .github/workflows/catalogs.yml
      - .github/workflows/_build-test.yml
      - .github/workflows/_release.yml
      - .github/workflows/_deploy.yml
      - src/Directory.Build.props
      - src/Directory.Packages.props
      - src/Packages.props
      - tests/Directory.Packages.props
      - tests/Directory.Build.props
      - .releaserc.yaml
  pull_request:
    branches:
      - develop
      - main
      - preview
      - beta
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#running-your-workflow-only-when-a-push-affects-specific-files
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onpushpull_requestpull_request_targetpathspaths-ignore
    paths:
      - src/Services/Catalogs/**
      - src/BuildingBlocks/**
      - tests/Services/Catalogs/**
      - .github/actions/**
      - .github/workflows/catalogs.yml
      - .github/workflows/_build-test.yml
      - .github/workflows/_release.yml
      - .github/workflows/_deploy.yml
      - src/Directory.Build.props
      - src/Directory.Packages.props
      - src/Packages.props
      - tests/Directory.Packages.props
      - tests/Directory.Build.props
      - .releaserc.yaml

  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#providing-inputs
  # https://github.blog/changelog/2021-11-10-github-actions-input-types-for-manual-workflows/
  # https://docs.github.com/en/actions/managing-workflow-runs/manually-running-a-workflow
  # Allows us to run this workflow manually from the Actions tab
  # To manually trigger a workflow, use the workflow_dispatch event. You can manually trigger a workflow run using the GitHub API, GitHub CLI, or GitHub browser interface
  # Note: To trigger the workflow_dispatch event, our workflow must be in the default branch
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'info'
        type: choice
        options:
          - info
          - warning
          - debug
      should-publish:
        required: true
        default: false
        description: "Should publish docker and publish artifacts?"
        type: boolean
      should-release:
        required: true
        default: true
        description: "Should release a release note?"
        type: boolean
#     # we don't use this here, I detect environment based on the branch
#     environment:
#       description: "Environment to run"
#       type: environment
#       required: true

# https://docs.github.com/en/actions/learn-github-actions/variables#defining-environment-variables-for-a-single-workflow
# https://docs.github.com/en/actions/using-workflows/reusing-workflows#limitations
# https://docs.github.com/en/actions/learn-github-actions/variables
# Any environment variables set in an env context defined at the workflow level in the caller workflow are not propagated to the called workflow
env:
  IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
  BRANCH_NAME: ${{ github.ref_name }}

# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

# https://docs.github.com/en/actions/using-workflows/about-workflows
jobs:

  pre-check:
    runs-on: ubuntu-latest

    # Skipping workflow runs for some commits types
    # https://itnext.io/automate-your-integration-tests-and-semantic-releases-with-github-actions-43875ad83092
    if: (!(contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, 'chore') || contains(github.event.head_commit.message, 'docs') || contains(github.event.head_commit.message, 'style')))

    # https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
    # Job outputs containing expressions are evaluated on the runner at the end of each job
    outputs:
      environment-name: ${{ steps.branch_check.outputs.environment-name }}

    steps:
      - name: echo
        run: echo "pre-check is successful."

      # https://www.codewrecks.com/post/github/choose-environment-from-branch/
      # https://stackoverflow.com/questions/63117454/how-to-set-workflow-env-variables-depending-on-branch
      # https://hungvu.tech/advanced-github-actions-conditional-workflow
      - name: Set environment for branch
        if: success()
        id: branch_check
        run: |
          if [[ $GITHUB_REF == 'refs/heads/main' ]]; then
              echo "environment-name=production" >> "$GITHUB_OUTPUT"
          elif [[ $GITHUB_REF == 'refs/heads/develop' ]]; then
              echo "environment-name=develop" >> "$GITHUB_OUTPUT"
          elif [[ $GITHUB_REF == 'refs/heads/preview' ]]; then
              echo "environment-name=staging" >> "$GITHUB_OUTPUT"
          elif [[ $GITHUB_REF == 'refs/heads/beta' ]]; then
              echo "environment-name=staging" >> "$GITHUB_OUTPUT"
          else
              echo "environment-name=develop" >> "$GITHUB_OUTPUT"
          fi

      - name: Echo Information
        if: success()
        run: |
          echo "I'm using environment: ${{ steps.branch_check.outputs.environment-name }}"
          echo "is workflow_dispatch event? ${{ github.event_name == 'workflow_dispatch' }}"
          echo "is push event? ${{ github.event_name == 'push' }}"

  call-build-test:
    needs: pre-check
    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
    permissions:
      contents: write #  to be able to commit application version

    env:
      REGISTRY: ghcr.io
      SERVICE: catalogs-service
      IMAGE: catalogs-service
      PROJECT_PATH: ${{ github.workspace }}/src/Services/Catalogs/ECommerce.Services.Catalogs.Api/ECommerce.Services.Catalogs.Api.csproj
      DOCKER_PATH: ${{ github.workspace }}/src/Services/Catalogs/Dockerfile
      TESTS_PATH: ${{ github.workspace }}
      UNIT_TESTS_FILTER: "(Category=Unit&FullyQualifiedName~UnitTests&FullyQualifiedName~ECommerce.Services.Catalogs)"
      INTEGRATION_TESTS_FILTER: "((Category=Integration&FullyQualifiedName~IntegrationTests)|(Category=EndToEnd&FullyQualifiedName~EndToEndTests)) & FullyQualifiedName~ECommerce.Services.Catalogs"
      EXCLUDE_COVERAGE: "[BuildingBlocks.*]*%2c[ECommerce.Services.Shared]*"

     if: (github.event_name != 'pull_request')

    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
    # https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/
    uses: ./.github/workflows/_build-test.yml
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
    # https://github.blog/changelog/2022-05-03-github-actions-simplify-using-secrets-with-reusable-workflows/
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-secrets-to-nested-workflows
    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecretsinherit
    secrets: inherit
    with:
      tests-path: ${{ env.TESTS_PATH }}
      coverage-exclude: ${{ env.EXCLUDE_COVERAGE }}
      unit-test-filter: ${{ env.UNIT_TESTS_FILTER }}
      integration-test-filter: ${{ env.INTEGRATION_TESTS_FILTER }}
      project-path: ${{ env.PROJECT_PATH }}

#  # It's best practice to publish release notes before deploying an app to the cloud. This allows users to be informed about what changes have been made and what to expect in the latest version.
#  call-release:
#    needs: [pre-check, call-build-test]
#    if: (github.event_name != 'pull_request' && contains(fromJson('["develop", "main", "preview", "beta", "devops/ci"]'), github.ref_name) && github.actor != 'dependabot[bot]' && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.should-release )))
#
#    permissions:
#      contents: write #  to be able to publish a GitHub release
#      issues: write #  to be able to comment on released issues
#      pull-requests: write #  to be able to comment on released pull requests
#
#    uses: ./.github/workflows/_release.yml
#    secrets: inherit
#
#  # https://docs.github.com/en/actions/deployment/about-deployments/deploying-with-github-actions
#  # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
#  # https://www.trywilco.com/post/wilco-ci-cd-github-heroku
#  # https://limeii.github.io/2022/11/deploy-to-azure-appservice-with-github-actions/
#  # https://limeii.github.io/2022/11/deploy-on-multiple-environment-with-github-actions/
#  # https://www.codewrecks.com/post/github/choose-environment-from-branch/
#  # https://colinsalmcorner.com/musings-on-reusable-workflows/
#  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
#  # we could use workflow_run and `completed` event that triggered by CI workflow here, This event will only trigger a workflow run if the workflow file is on the default branch.
#  call-publish:
#    needs: [pre-check, call-build-test, call-release]
#
#    if: (github.event_name != 'pull_request' && contains(fromJson('["develop", "main", "preview", "beta", "devops/ci"]'), github.ref_name) && github.actor != 'dependabot[bot]' && (github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.should-publish )))
#
#    # https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
#    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions
#    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idpermissions
#    # https://docs.github.com/en/packages/managing-github-packages-using-github-actions-workflows/publishing-and-installing-a-package-with-github-actions#upgrading-a-workflow-that-accesses-ghcrio
#    permissions:
#      contents: write #  to be able to publish a GitHub release
#      packages: write # for publishing packages
#
#    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#calling-a-reusable-workflow
#    # https://github.blog/2021-11-29-github-actions-reusable-workflows-is-generally-available/
#    uses: ./.github/workflows/_deploy.yml
#    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-inputs-and-secrets-to-a-reusable-workflow
#    # https://github.blog/changelog/2022-05-03-github-actions-simplify-using-secrets-with-reusable-workflows/
#    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#passing-secrets-to-nested-workflows
#    # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idsecretsinherit
#    secrets: inherit
#    with:
#      environment-name: ${{ needs.pre-check.outputs.environment-name }}
#      release-version: ${{ needs.call-release.outputs.release-version }}

