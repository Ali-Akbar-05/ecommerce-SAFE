name: Reusable Release Workflow

on:
  workflow_call:
jobs:

  deploy:
    name: Release
    runs-on: ubuntu-latest
    #https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstrategyfail-fast
    continue-on-error: false

    steps:

      # https://docs.github.com/en/actions/learn-github-actions/variables#using-contexts-to-access-variable-values
      - name: Job Info
        run: |
          echo "job name is: $GITHUB_JOB"
          echo "branch name is: $GITHUB_REF_NAME"

        # https://github.com/cycjimmy/semantic-release-action/issues/6
        # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
        # https://stackoverflow.com/questions/750172/how-do-i-change-the-author-and-committer-name-email-for-multiple-commits
        # https://github.com/orgs/community/discussions/26560
      - name: Checkout Repository
        uses: actions/checkout@v3
        # https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
        # Only a single commit is fetched by default, Set fetch-depth: 0 to fetch all history for all branches and tags.
        # get latest remote change because sematic-release in `verifyConditions` event checks local branch has latest remote branch changes, for preventing: The local branch `something` is behind the remote one, therefore a new version won't be published.
        with:
          fetch-depth: 0
      - run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'

      - name: create output dir
        run: mkdir  "output"

        # https://github.com/actions/download-artifact#download-all-artifacts
        # download artifacts without name will download all artifacts
      - name: Download All Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: dir
        run: ls -R "${{ github.workspace }}/artifacts/build-test-artifacts"

        # https://askubuntu.com/questions/86849/how-to-unzip-a-zip-file-from-the-terminal
      - name: unzip artifacts
        run: |
          unzip "artifacts/build-test-artifacts/test-results.zip" -d "output"

      - name: Ls Output Files
        if: success()
        run: ls -R ${{ github.workspace }}/output

      # https://thecodinganalyst.github.io/knowledgebase/Basic-guide-to-Semantic-Release/
      # https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b
      # https://gist.github.com/ujlbu4/15a305f2e53cb487c39c9484e660903a
      # https://github.com/semantic-release/semantic-release/issues/753#issuecomment-706971174
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions
      - name: Semantic Release Publish
        id: semantic
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # because of using none default (conventionalcommits) `preset` for `semantic-release`, we should add dependency `conventional-changelog-conventionalcommits`
        # using dry-run here for preventing publish release note and just calculate version, for develop and devops/ci we don't want to publish release
        run: |
          echo "running semantic-release in release mode"
          # https://github.com/semantic-release/semantic-release/issues/1208
          # https://github.com/semantic-release/semantic-release/blob/b9b5c7689f0acdfdc079c839db0fcf78339745e2/index.js#L92
          # get latest remote change because sematic-release in `verifyConditions` event checks local branch has latest remote branch changes, for preventing: The local branch `something` is behind the remote one, therefore a new version won't be published.
          # git pull
          npx -p conventional-changelog-conventionalcommits -p @semantic-release/git -p @semantic-release/changelog -p @semantic-release/exec -p @saithodev/semantic-release-backmerge  semantic-release

        # https://stackoverflow.com/questions/69043259/how-can-i-cancel-a-github-actions-workflow-if-the-commit-has-no-tag
      - name: Semantic Release Outputs
        if: (success() && steps.semantic.outputs.semantic_nextRelease_version != '')
        run: |
          if [ -z ${{ steps.semantic.outputs.semantic_nextRelease_version }} ]
             then echo "semantic_nextRelease_version is empty, action cancelled..."
                  exit 1
          else
              echo ${{ steps.semantic.outputs.semantic_nextRelease_version }}
              echo ${{ steps.semantic.outputs.semantic_nextRelease_channel }}
              echo ${{ steps.semantic.outputs.semantic_nextRelease_gitTag }}
              echo ${{ steps.semantic.outputs.semantic_lastRelease_version }}
              echo ${{ steps.semantic.outputs.semantic_lastRelease_channel }}
              echo ${{ steps.semantic.outputs.semantic_lastRelease_gitTag }}
          fi

        # https://stackoverflow.com/questions/69839851/github-actions-copy-git-user-name-and-user-email-from-last-commit
        # This back-merge may failed because of complexity some merge we should continue next step with using if: always()
        # https://github.com/orgs/community/discussions/26560
      - name: Back Merge Release
        if: success()
        run: |
          ./back-merge.sh
