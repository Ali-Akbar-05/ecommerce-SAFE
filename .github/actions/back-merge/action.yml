# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions
# https://doug.sh/posts/using-composite-actions-with-github-actions/
# https://wallis.dev/blog/composite-github-actions

name: "Back Merge branches"
description: "Back Merge branches"

# Input parameters allow you to specify data that the action expects to use during runtime. GitHub stores input parameters as environment variables.(so they are just string)
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
inputs:
  # https://stackoverflow.com/questions/70098241/using-secrets-in-composite-actions-github
  token:
    description: A Github PAT
    default: ${{ github.token }}
  source-branch:
    description: Source branch
    required: true

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-actions
runs:
  using: "composite"

  steps:
      # https://github.com/cycjimmy/semantic-release-action/issues/6
      # https://github.com/actions/checkout#push-a-commit-using-the-built-in-token
      # https://stackoverflow.com/questions/750172/how-do-i-change-the-author-and-committer-name-email-for-multiple-commits
      # https://github.com/semantic-release/semantic-release/issues/1208
      # https://github.com/orgs/community/discussions/26560
      # https://blog.pother.ca/github-actions-workflow_run-event/
      # https://stackoverflow.com/questions/63343937/how-to-use-the-github-actions-workflow-run-event
      # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_run
      # https://github.com/semantic-release/semantic-release/blob/b9b5c7689f0acdfdc079c839db0fcf78339745e2/index.js#L92
      ## https://github.com/actions/checkout/issues/439#issuecomment-965968956
      # get latest remote change because sematic-release in `verifyConditions` event checks local branch has latest remote branch changes, for preventing: The local branch `something` is behind the remote one, therefore a new version won't be published.
      # By default checkout@v3, will check branch on ref/SHA that triggered in starting workflow, so if inner a job in the workflow we change HEAD of repository by changing code, subsequent jobs don't get these commits and they get ref/SHA that triggered in starting workflow
      # we can't create a `composite-action` for `checkout` because for finding composite-action locally with relative path, repository should be `checkout` first
      - name: Check out code
        uses: actions/checkout@v3
        with:
          # https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches
          # Only a single commit is fetched by default, for the ref/SHA that triggered the workflow. Set fetch-depth: 0 to fetch all history for all branches and tags
          fetch-depth: 0
          repository: ${{ github.repository }}
          token: ${{ inputs.token }}
          # set ref to 'github.ref' works correctly with both pull_requests event and push event and this is default behavior checkout action when we don't use ref attribute
          ref: ${{ github.ref }}
      - run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
        shell: bash

      # https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md
      # https://github.com/peter-evans/create-pull-request/blob/main/docs/examples.md#keep-a-branch-up-to-date-with-another
      - name: Merge Branches
        shell: bash
        run: |
          if [ ${{ inputs.source-branch }} = 'main' ]; then
              echo "back-merge main branch to develop protected branch through pull-request"
              git checkout develop
              git fetch origin main:main
              git reset --hard main
          elif [ ${{ inputs.source-branch }} = 'develop' ]; then
              ./back-merge.sh  ${{ github.ref_name }}
              echo "back-merge develop branch to all features"
          elif [ ${{ inputs.source-branch }} = 'beta' ]; then
          echo "back-merge for beta branch"
              echo "...."
          elif [ ${{ inputs.source-branch }} = 'preview' ]; then
              echo "back-merge for preview branch"
              echo "...."
          fi

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          delete-branch: true
          token: ${{ inputs.token }}
          author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
          commit-message: "chore(release): ðŸ”§ preparations for next release with a back-merge [skip ci]"
          title: "chore(release): ðŸ”§ preparations for next release with a back-merge [skip ci]"
          branch: back-merge-${{ inputs.source-branch }}
